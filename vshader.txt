#version 330

//Uniform variables
uniform mat4 P;
uniform mat4 V;
//uniform mat4 M;


//Attributes
in vec3 vertex; //vertex coordinates in model space
in vec2 vertexUV;
in vec3 normal; //vertex normal (ignored for now)
in mat4 M;


out vec2 UV;
out float dist;

out vec3 tvertex;
out vec3 tnormal;
out vec3 lpos;
out vec3 cpos;


void main(void) {

	gl_Position=P*V*M*vec4(vertex,1);
	UV = vertexUV;



//regular shader

	vec4 lp = vec4(5,10,-7,1); //world  (a,b,c,d)  b++ -> wiekszy cien
    vec4 l =normalize( V *lp -  V * M * vec4(vertex,1));
    vec4 n = normalize(V * M * vec4(normal,0));

   	float d= dot(n,l);
    dist = d;




    //v3 toon shader


    tvertex = (V*M*vec4(vertex,1)).xyz;
    tnormal = (V*M *vec4(normal,0)).xyz;
    lpos = (V * vec4(5,10,-7,1)).xyz;
    cpos = V[0].xyz;

}
